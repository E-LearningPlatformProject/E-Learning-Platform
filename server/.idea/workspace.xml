<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5e680216-ced8-4f83-a9b0-60089deeaecb" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2hQiDZOXLhWvCl7K41aXVhoC1Tx" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python tests.Python tests for courses_service_test.CoursesService_Sould.test_all_non_hidden.executor": "Run",
    "Python tests.Python tests for courses_service_test.CoursesService_Sould.test_all_non_hidden_with_search.executor": "Run",
    "Python tests.Python tests for courses_service_test.CoursesService_Sould.test_all_non_premium.executor": "Run",
    "Python tests.Python tests for courses_service_test.CoursesService_Sould.test_all_non_premium_with_search.executor": "Run",
    "Python tests.Python tests for sections_router_test.SectionRouterTests.test_get_section_when_valid.executor": "Run",
    "Python tests.Python tests for students_router_test.StudentsRouter_Should.test_enroll_student_enrolls_whenValid.executor": "Run",
    "Python tests.Python tests for students_router_test.StudentsRouter_Should.test_enroll_student_returnsBadRequest_whenCourseNotExists.executor": "Run",
    "Python tests.Python tests for students_router_test.StudentsRouter_Should.test_enroll_student_returnsForbidden_whenUserNotStudent.executor": "Run",
    "Python tests.Python tests for students_router_test.StudentsRouter_Should.test_enroll_student_returnsUnauthorized_whenNoToken.executor": "Run",
    "Python tests.Python tests for students_router_test.StudentsRouter_Should.test_update_student_info_returnsUnauthorized_whenNoToken.executor": "Run",
    "Python tests.Python tests for students_router_test.StudentsRouter_Should.test_update_student_info_updatesInfo_whenValidToken.executor": "Run",
    "Python tests.Python tests for students_service_test.StudentsService_Should.executor": "Run",
    "Python tests.Python tests for students_service_test.StudentsService_Should.test_check_if_student_is_enrolled.executor": "Run",
    "Python tests.Python tests for students_service_test.StudentsService_Should.test_enroll_student.executor": "Run",
    "Python tests.Python tests for tags_service_test.TagsService_Sould.executor": "Run",
    "Python tests.Python tests for tags_service_test.TagsService_Sould.test_create_tags.executor": "Run",
    "Python tests.Python tests for tags_service_test.TagsService_Sould.test_delete.executor": "Run",
    "Python tests.Python tests for tags_service_test.TagsService_Sould.test_get_tags_by_course_id.executor": "Run",
    "Python tests.Python tests for tags_service_test.TagsService_Sould.test_get_tags_by_name.executor": "Run",
    "Python tests.Python tests for teachers_service_test.TeachersService_Sould.executor": "Run",
    "Python tests.Python tests for teachers_service_test.UsersServiceTests.executor": "Run",
    "Python tests.Python tests for teachers_service_test.UsersServiceTests.test_change_account_info.executor": "Run",
    "Python tests.Python tests for teachers_service_test.UsersServiceTests.test_check_if_is_approved.executor": "Run",
    "Python tests.Python tests for teachers_service_test.UsersServiceTests.test_check_if_is_approved_returnsFalse.executor": "Run",
    "Python tests.Python tests for teachers_service_test.UsersServiceTests.test_check_if_is_approved_returnsTrue.executor": "Run",
    "Python tests.Python tests for teachers_service_test.UsersServiceTests.test_get_teacher_email.executor": "Run",
    "Python tests.Python tests for users_router_test.UsersRouter_Should.executor": "Run",
    "Python tests.Python tests for users_router_test.UsersRouter_Should.test_login_with_valid_credentials.executor": "Run",
    "Python tests.Python tests for users_service_test.UsersServiceTests.executor": "Run",
    "Python tests.Python tests for users_service_test.UsersServiceTests.test_create_student.executor": "Run",
    "Python tests.Python tests for users_service_test.UsersServiceTests.test_create_teacher.executor": "Run",
    "Python tests.Python tests for users_service_test.UsersServiceTests.test_create_token.executor": "Run",
    "Python tests.Python tests for users_service_test.UsersServiceTests.test_find_by_email.executor": "Run",
    "Python tests.Python tests for users_service_test.UsersServiceTests.test_find_student_info.executor": "Run",
    "Python tests.Python tests for users_service_test.UsersServiceTests.test_find_teacher_info.executor": "Run",
    "Python tests.Python tests for users_service_test.UsersServiceTests.test_is_authenticated.executor": "Run",
    "Python tests.Python tests for users_service_test.UsersServiceTests.test_try_login_successful.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "ToolWindowRun.ShowToolbar": "false",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "C:/Users/rados/OneDrive/Desktop/Final Project/Project/E-Learning-Platform/server"
  }
}]]></component>
  <component name="RunManager" selected="Python tests.Python tests for sections_router_test.SectionRouterTests.test_get_section_when_valid">
    <configuration name="Python tests for sections_router_test.SectionRouterTests.test_get_section_when_valid" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="server" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/routers_tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;sections_router_test.SectionRouterTests.test_get_section_when_valid&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for students_router_test.StudentsRouter_Should.test_enroll_student_enrolls_whenValid" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="server" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;students_router_test.StudentsRouter_Should.test_enroll_student_enrolls_whenValid&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for students_router_test.StudentsRouter_Should.test_enroll_student_returnsBadRequest_whenCourseNotExists" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="server" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;students_router_test.StudentsRouter_Should.test_enroll_student_returnsBadRequest_whenCourseNotExists&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for students_router_test.StudentsRouter_Should.test_enroll_student_returnsForbidden_whenUserNotStudent" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="server" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;students_router_test.StudentsRouter_Should.test_enroll_student_returnsForbidden_whenUserNotStudent&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for students_router_test.StudentsRouter_Should.test_update_student_info_returnsUnauthorized_whenNoToken" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="server" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;students_router_test.StudentsRouter_Should.test_update_student_info_returnsUnauthorized_whenNoToken&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for sections_router_test.SectionRouterTests.test_get_section_when_valid" />
        <item itemvalue="Python tests.Python tests for students_router_test.StudentsRouter_Should.test_enroll_student_enrolls_whenValid" />
        <item itemvalue="Python tests.Python tests for students_router_test.StudentsRouter_Should.test_update_student_info_returnsUnauthorized_whenNoToken" />
        <item itemvalue="Python tests.Python tests for students_router_test.StudentsRouter_Should.test_enroll_student_returnsForbidden_whenUserNotStudent" />
        <item itemvalue="Python tests.Python tests for students_router_test.StudentsRouter_Should.test_enroll_student_returnsBadRequest_whenCourseNotExists" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-babbdf50b680-746f403e7f0c-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.15989.155" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="5e680216-ced8-4f83-a9b0-60089deeaecb" name="Changes" comment="" />
      <created>1717532582583</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1717532582583</updated>
    </task>
    <servers />
  </component>
</project>